# Run ISCE2 rtcApp for a single Sentinel1 GRD
name: rtcApp

on:
  workflow_dispatch:
    inputs:
      GRD:
        description: Sentinel1 GRD from ASF https://search.asf.alaska.edu
        default: S1B_IW_GRDH_1SDV_20200913T010946_20200913T011011_023350_02C58A_4A77
      EPSG:
        description: Output Projection EPSG Code
        default: 32612

jobs:
  rtcApp:
    runs-on: ubuntu-20.04
    env:
      INPUT_GRD: ${{ github.event.inputs.GRD }}
      INPUT_EPSG: ${{ github.event.inputs.EPSG }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Configure NASA URS ~/.netrc
      env:
        # Warning: careful exposing secrets in scripts
        EARTHDATA_LOGIN: ${{ secrets.NASA_USERNAME }}
        EARTHDATA_PASSWORD: ${{ secrets.NASA_PASSWORD }}
      run: |
        echo "machine urs.earthdata.nasa.gov login $EARTHDATA_LOGIN password $EARTHDATA_PASSWORD" > ~/.netrc
        chmod 0600 ~/.netrc

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda-linux-64.lock') }}

    - name: Setup Conda Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
        auto-update-conda: false
        environment-file: conda-linux-64.lock
        activate-environment: isce2-rtc
        use-only-tar-bz2: true

    - name: List conda packages
      run: |
        conda list

    - name: Download GRD Frame
      run: |
        SAT=S${INPUT_GRD:2:1}
        wget --no-verbose -nc https://datapool.asf.alaska.edu/GRD_HD/${SAT}/${INPUT_GRD}.zip
        ./fetchOrbit.py -i ${INPUT_GRD}.zip

    - name: Configure ISCE2
      run: |
        ISCE_HOME="/usr/share/miniconda3/envs/isce2-rtc/lib/python3.9/site-packages/isce"
        PATH="${PATH}:${ISCE_HOME}/bin:${ISCE_HOME}/applications"

        # Need absolute path to GRD
        INPUT_ZIP="${PWD}/${INPUT_GRD}.zip"
        sed -e 's,GRD,'"${INPUT_ZIP}"',g' -e 's,EPSG,'"${INPUT_EPSG}"',g' rtcApp.template > rtcApp.xml
        cat rtcApp.xml

        echo "ISCE_HOME=${ISCE_HOME}" >> $GITHUB_ENV
        echo "PATH=${PATH}" >> $GITHUB_ENV

    - name: Patch rtcApp
      run: |
        # https://github.com/isce-framework/isce2/pull/220
        sed -i -e 's/args=(self.geocode_list, self.geocode_bbox))/)/' `which rtcApp.py`

    - name: Run rtcApp
      run: |
        rtcApp.py --steps

    - name: Finish up
      run: |
        rm ~/.netrc
        tree

    - name: Save geocoded output
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.GRD }}
        path: |
          isce.log
          rtcProc.xml
          rtcApp.xml
          output/gamma_VV*
